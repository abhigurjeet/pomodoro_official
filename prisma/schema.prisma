generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  email         String        @unique
  role          Role          @default(USER)
  tasks         Task[]
  timersettings Timersetting?
  tomatodetails Tomatodetail?
}

enum Role {
  USER
  ADMIN
}

model Task {
  id          Int       @id @default(autoincrement())
  user        User?     @relation(fields: [userId], references: [id])
  userId      Int
  title       String
  description String
  dueDate     DateTime  @default(now())
  estTomato   Int
  tomato      Int?      @default(0)
  createDate  DateTime  @default(now())
  completedOn DateTime?
  taskStatus  String    @default("Not started")
}

model Timersetting {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int     @unique
  pomodoro      Int     @default(1500)
  shortBreak    Int     @default(300)
  longBreak     Int     @default(900)
  pomoTechnique Boolean @default(false)
  autoStart     Boolean @default(false)
}

model Tomatodetail {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int      @unique
  activeTask      Int      @default(-1)
  currentDate     DateTime @default(now())
  weeklyTomato    Int[]    @default([0, 0, 0, 0, 0, 0, 0])
  weeklyFocusTime Int[]    @default([0, 0, 0, 0, 0, 0, 0])
}
